<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="5" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-05T13:31:48Z" name="Suite" finished-at="2024-05-05T13:34:09Z" duration-ms="140823">
    <groups>
    </groups>
    <test started-at="2024-05-05T13:31:48Z" name="Test" finished-at="2024-05-05T13:34:09Z" duration-ms="140823">
      <class name="testcaseIMP.RegisterPageExtendsEX1">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:03:09Z" name="setup" finished-at="2024-05-05T19:03:22Z" duration-ms="13120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithSubscriptionYes()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:03:22Z" name="registerWithSubscriptionYes" finished-at="2024-05-05T19:03:22Z" duration-ms="51" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
	at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)
	at pages.RegRegisterPage.enterFirstName(RegRegisterPage.java:22)
	at testcaseIMP.RegisterPageExtendsEX1.registerWithSubscriptionYes(RegisterPageExtendsEX1.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithSubscriptionYes -->
        <test-method is-config="true" signature="quit()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:03:22Z" name="quit" finished-at="2024-05-05T19:03:26Z" duration-ms="3829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:03:26Z" name="setup" finished-at="2024-05-05T19:03:39Z" duration-ms="13162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithWithoutAnyInformation()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:03:39Z" name="registerWithWithoutAnyInformation" finished-at="2024-05-05T19:03:41Z" duration-ms="1178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithWithoutAnyInformation -->
        <test-method is-config="true" signature="quit()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:03:41Z" name="quit" finished-at="2024-05-05T19:03:45Z" duration-ms="4017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:03:45Z" name="setup" finished-at="2024-05-05T19:04:04Z" duration-ms="19818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validInformationAndRegister()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:04:04Z" name="validInformationAndRegister" finished-at="2024-05-05T19:04:05Z" duration-ms="37" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
	at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)
	at pages.RegRegisterPage.enterFirstName(RegRegisterPage.java:22)
	at testcaseIMP.RegisterPageExtendsEX1.validInformationAndRegister(RegisterPageExtendsEX1.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validInformationAndRegister -->
        <test-method is-config="true" signature="quit()[pri:0, instance:testcaseIMP.RegisterPageExtendsEX1@41c2284a]" started-at="2024-05-05T19:04:05Z" name="quit" finished-at="2024-05-05T19:04:09Z" duration-ms="4195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- testcaseIMP.RegisterPageExtendsEX1 -->
      <class name="testcaseIMP.LoginTestExtendsFromBase">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:01:48Z" name="setup" finished-at="2024-05-05T19:02:07Z" duration-ms="19322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInvalidUserNameAndValidPassword()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:07Z" name="loginWithInvalidUserNameAndValidPassword" finished-at="2024-05-05T19:02:09Z" duration-ms="1946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidUserNameAndValidPassword -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:09Z" name="quitBrowser" finished-at="2024-05-05T19:02:12Z" duration-ms="2927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:12Z" name="setup" finished-at="2024-05-05T19:02:26Z" duration-ms="13590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidUserNameAndInvalidPAssword()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:26Z" name="loginWithValidUserNameAndInvalidPAssword" finished-at="2024-05-05T19:02:28Z" duration-ms="1821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidUserNameAndInvalidPAssword -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:28Z" name="quitBrowser" finished-at="2024-05-05T19:02:31Z" duration-ms="3038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:31Z" name="setup" finished-at="2024-05-05T19:02:47Z" duration-ms="16098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidUserNameAndPassword()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:47Z" name="loginWithValidUserNameAndPassword" finished-at="2024-05-05T19:02:50Z" duration-ms="3592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidUserNameAndPassword -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:50Z" name="quitBrowser" finished-at="2024-05-05T19:02:54Z" duration-ms="3163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:02:54Z" name="setup" finished-at="2024-05-05T19:03:05Z" duration-ms="11852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithoutUserNameAndPAssword()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:03:05Z" name="loginWithoutUserNameAndPAssword" finished-at="2024-05-05T19:03:06Z" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutUserNameAndPAssword -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:testcaseIMP.LoginTestExtendsFromBase@6497b078]" started-at="2024-05-05T19:03:06Z" name="quitBrowser" finished-at="2024-05-05T19:03:09Z" duration-ms="2855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- testcaseIMP.LoginTestExtendsFromBase -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
